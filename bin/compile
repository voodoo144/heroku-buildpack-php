#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# Heroku Revision.
#
# Affixed to all vendored binary output to represent changes to the
# compilation environment without a change to the upstream version,
# e.g. PHP 5.3.27 without, and then subsequently with, libmcrypt.
heroku_rev='-2'

# config
MCRYPT_VERSION="2.5.8"
APACHE_VERSION="2.2.26"
APACHE_PATH="apache"
PHP_VERSION="5.3.27"
PHP_PATH="php"
MONGO_VERSION="2.4.8"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

MCRYPT_URL="https://dl.dropboxusercontent.com/u/75836341/mcrypt-""$MCRYPT_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling mcrypt version $MCRYPT_VERSION"
echo "-----> Get mcrypt from $MCRYPT_URL"
curl --silent --max-time 60 --location "$MCRYPT_URL" | tar xz

APACHE_URL="https://dl.dropboxusercontent.com/u/75836341/apache-""$APACHE_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
echo "-----> Get apache from $APACHE_URL"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

PHP_URL="https://dl.dropboxusercontent.com/u/75836341/php-$PHP_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
echo "-----> Get php from $PHP_URL"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

MONGO_URL="http://downloads.mongodb.org/linux/mongodb-linux-x86_64-$MONGO_VERSION"".tgz"
echo "-----> Bundling Mongo version $MONGO_VERSION"
echo "-----> Get Mongo from $MONGO_URL"
curl --silent --max-time 60 --location "$MONGO_URL" | tar xz

#Rename mongo dir
mv mongodb-linux-x86_64-$MONGO_VERSION mongo

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/lib/php
export PHP_INI_SCAN_DIR=/app/www
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR
